음식을 고르고 -> (한식,중식,일식,양식 중 하나 선택), (맵기 강,중,약 중 하나 선택), (밥, 면, 빵) 
고른 음식의 식당을 추천(random) 
위에 두개는 while로 무한 반복 돌리고 선택은 scanner로 입력받아서 해당하는 음식들을 띄워주고
거기서 원하는 이름을 입력하면 해당하는 음식점들을 random으로 추천해줌 
(다 파일로) (파일의 데이터는 10개정도씩만 넣어놓고 나머지는 입력가능하게)

음식 데이터 수정+삭제+입력 || 식당 데이터 수정+삭제+입력 (file내용을 바꾸는것임.) 

먹은 이력 통계 
(음식점까지 선택이 완료되면 해당 데이터를 파일에 저장해서 
지금까지 많이먹은 스타일과 맵기 종류를 표기해줌.)

--가능하면 먹은이력통계 파일도 수정할 수 있도록 만들기

나누어야 될 것들 : 음식고르기,  고른 음식 식당 추천 , 전체파일 합쳐놓은 실행파일, 음식 파일, 식당 파일, 음식데이터 수정 삭제 입력
식당 데이터 수정 삭제 입력, 먹은 이력 통계

어떤 음식이 어디에 포함되어있는지 메인에 넣어서 알려줄것
input.txt

https://velog.io/@vgo_dongv/Java-File%EA%B3%BC-Map%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8%EB%B6%80-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8


https://pjh-raccoon.tistory.com/13

Iterator<Map.Entry<String, data>> kkk = sfFood.entrySet().iterator();
			Map.Entry<String, data> entry = kkk.next();
			System.out.println(String.format(entry.getKey(),entry.getValue()));
			
			package study15_1;

ArrayList<String> getPersonInfoWithName(String name) {
		ArrayList<String> al = new ArrayList<>();
		Set<Entry<String, PersonInfo>> entrySet = pList.entrySet();
		Iterator<Entry<String, PersonInfo>> entry = entrySet.iterator();
		while(entry.hasNext()) {
			Entry<String, PersonInfo> en = entry.next();
			PersonInfo pInfo = en.getValue();
			if(pInfo.getName().equals(name)) {
				 String eName = pInfo.getName();
				 String eTel =en.getKey();
				 String eAddr = pInfo.getAdress();
				al.add( "||이름: " + eName +"||전화번호: " + eTel + "||주소: "+eAddr);
			}
		}
			if(al.size()==0){
				al.add("해당 검색 대상이 없습니다.");
			}
			return al;
	}